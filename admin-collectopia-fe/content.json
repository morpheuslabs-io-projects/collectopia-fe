{"id":"admin-collectopia","data":{"assets":[],"styles":[{"selectors":["#i5kmfg"],"style":{"font-family":"'Poppins', sans-serif"}},{"selectors":[],"selectorsAdd":"html","style":{"scroll-behavior":"smooth"}},{"selectors":[],"selectorsAdd":"*","style":{"box-sizing":"border-box"}},{"selectors":[],"selectorsAdd":"body","style":{"margin-top":"0px","margin-right":"0px","margin-bottom":"0px","margin-left":"0px","overflow-x":"auto !important","overflow-y":"auto !important"}},{"selectors":[],"selectorsAdd":"html, body","style":{"font-family":"Poppins, sans-serif","font-weight":"400"}},{"selectors":[],"selectorsAdd":"span + span","style":{"padding-left":"0.23em"}},{"selectors":["modal-container"],"style":{"background-image":"linear-gradient(to right, rgb(28, 28, 28) 0%, rgb(79, 76, 60) 50%, rgb(28, 28, 28) 100%)","width":"100%","height":"100%"}},{"selectors":["max-w-1320"],"style":{"max-width":"1320px"}},{"selectors":["max-w-1530"],"style":{"max-width":"1530px"}},{"selectors":["max-w-1468"],"style":{"max-width":"1468px"}},{"selectors":["btn-active"],"style":{"background-color":"rgb(37, 37, 37) !important","height":"24px !important","width":"24px !important","color":"rgb(255, 255, 255) !important","text-align":"center !important"}},{"selectors":["login-loading-btn"],"style":{"background-color":"rgba(0, 0, 0, 0.553) !important"}},{"selectors":["rounded-14"],"style":{"border-top-left-radius":"14px","border-top-right-radius":"14px","border-bottom-right-radius":"14px","border-bottom-left-radius":"14px"}},{"selectors":["bg-gray-11"],"style":{"background-color":"rgb(244, 247, 248)"}}],"pages":[{"frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"resizable":true,"attributes":{"id":"ixxf"},"components":[{"tagName":"meta","void":true,"attributes":{"charset":"UTF-8"}},{"tagName":"meta","void":true,"attributes":{"name":"viewport","content":"width=device-width, initial-scale=1.0"}},{"tagName":"link","void":true,"attributes":{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}},{"tagName":"link","void":true,"attributes":{"href":"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap","rel":"stylesheet"}},{"tagName":"link","void":true,"attributes":{"rel":"stylesheet","href":"index.css"}},{"tagName":"title","type":"text","attributes":{"id":"imeikn"},"components":[{"type":"textnode","content":"Collectopia Admin Portal - Login"}]},{"type":"custom-code","droppable":false,"resizable":true,"attributes":{"id":"iq0dp2"},"components":[{"type":"script","components":[{"type":"textnode","content":"\n    window.onload = () => {\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      // Login\n\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        window.location.href = \"/profile.html\";\n      }\n\n      const loginEmail = $(\"#login-email\");\n      const loginPassword = $(\"#login-password\");\n      const loginError = $(\"#login-error-message\");\n      const btnLogin = $(\"#test-btn-2\");\n\n      btnLogin.on(\"click\", async () => {\n        if (loginEmail.val() === \"\" || loginPassword.val() === \"\") {\n          loginError.text(\"Please enter email and password\");\n          return;\n        }\n        try {\n          btnLogin.css(\"opacity\", \"0.5\");\n          btnLogin.prop(\"disabled\", true);\n          loginEmail.prop(\"disabled\", true);\n          loginPassword.prop(\"disabled\", true);\n          loginError.text(\"\");\n          $(\"#login-loading-animation\").removeClass(\"hidden\");\n          $(\"#login-loading-text\").addClass(\"hidden\");\n          await fetch(`${BASE_URL}/sign-in`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n              username: loginEmail.val(),\n              password: loginPassword.val(),\n            }),\n          })\n            .then((res) => res.json())\n            .then((res) => {\n              if (res[0].data.status === false) {\n                loginError.text(res[0].data.message);\n                btnLogin.css(\"opacity\", \"1\");\n                btnLogin.prop(\"disabled\", false);\n                loginEmail.prop(\"disabled\", false);\n                loginPassword.prop(\"disabled\", false);\n                $(\"#login-loading-animation\").addClass(\"hidden\");\n                $(\"#login-loading-text\").removeClass(\"hidden\");\n              } else {\n                localStorage.setItem(\"token\", res[0].data);\n                window.location.href = \"/profile.html\";\n              }\n            });\n        } catch (error) {\n          btnLogin.css(\"opacity\", \"1\");\n          btnLogin.prop(\"disabled\", false);\n          loginEmail.prop(\"disabled\", false);\n          loginPassword.prop(\"disabled\", false);\n          $(\"#login-loading-animation\").addClass(\"hidden\");\n          $(\"#login-loading-text\").removeClass(\"hidden\");\n          console.log(error);\n          loginError.text(error.message);\n          return null;\n        }\n      });\n    };\n  "}]}],"custom-code-plugin__code":" <script>\n    window.onload = () => {\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      // Login\n\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        window.location.href = \"/profile.html\";\n      }\n\n      const loginEmail = $(\"#login-email\");\n      const loginPassword = $(\"#login-password\");\n      const loginError = $(\"#login-error-message\");\n      const btnLogin = $(\"#test-btn-2\");\n\n      btnLogin.on(\"click\", async () => {\n        if (loginEmail.val() === \"\" || loginPassword.val() === \"\") {\n          loginError.text(\"Please enter email and password\");\n          return;\n        }\n        try {\n          btnLogin.css(\"opacity\", \"0.5\");\n          btnLogin.prop(\"disabled\", true);\n          loginEmail.prop(\"disabled\", true);\n          loginPassword.prop(\"disabled\", true);\n          loginError.text(\"\");\n          $(\"#login-loading-animation\").removeClass(\"hidden\");\n          $(\"#login-loading-text\").addClass(\"hidden\");\n          await fetch(`${BASE_URL}/sign-in`, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n              username: loginEmail.val(),\n              password: loginPassword.val(),\n            }),\n          })\n            .then((res) => res.json())\n            .then((res) => {\n              if (res[0].data.status === false) {\n                loginError.text(res[0].data.message);\n                btnLogin.css(\"opacity\", \"1\");\n                btnLogin.prop(\"disabled\", false);\n                loginEmail.prop(\"disabled\", false);\n                loginPassword.prop(\"disabled\", false);\n                $(\"#login-loading-animation\").addClass(\"hidden\");\n                $(\"#login-loading-text\").removeClass(\"hidden\");\n              } else {\n                localStorage.setItem(\"token\", res[0].data);\n                window.location.href = \"/profile.html\";\n              }\n            });\n        } catch (error) {\n          btnLogin.css(\"opacity\", \"1\");\n          btnLogin.prop(\"disabled\", false);\n          loginEmail.prop(\"disabled\", false);\n          loginPassword.prop(\"disabled\", false);\n          $(\"#login-loading-animation\").addClass(\"hidden\");\n          $(\"#login-loading-text\").removeClass(\"hidden\");\n          console.log(error);\n          loginError.text(error.message);\n          return null;\n        }\n      });\n    };\n  </script>"},{"type":"custom-code","resizable":true,"attributes":{"id":"ibe2f1"},"components":[],"custom-code-plugin__code":"<style>\n  html {\n    scroll-behavior: smooth;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    overflow: auto !important;\n}\n\nhtml,\nbody {\n    font-family: Poppins, sans-serif;\n    font-weight: 400;\n}\n\nspan+span {\n    padding-left: 0.23em;\n}\n\n.modal-container {\n    background-image: linear-gradient(to right,\n            #1c1c1c 0%,\n            #4f4c3c 50%,\n            #1c1c1c 100%);\n    width: 100%;\n    height: 100%;\n}\n\n.max-w-1320 {\n    max-width: 1320px;\n}\n\n.max-w-1530 {\n    max-width: 1530px;\n}\n\n.max-w-1468 {\n    max-width: 1468px;\n}\n\n.btn-active {\n    background-color: #252525 !important;\n    height: 24px !important;\n    width: 24px !important;\n    color: #fff !important;\n    text-align: center !important;\n}\n\n.login-loading-btn {\n    background-color: #0000008d !important;\n}\n\n.rounded-14 {\n    border-radius: 14px;\n}\n\n.bg-gray-11 {\n    background-color: #F4F7F8;\n}\n</style>"},{"resizable":true,"classes":["flex","justify-center","items-center","h-screen","w-screen","bg-[#F4F7F8]"],"attributes":{"id":"ietwlu"},"components":[{"classes":["w-[435px]","h-[300px]","bg-white","rounded-lg","p-6","flex","flex-col","justify-between"],"components":[{"type":"text","classes":["text-[24px]","text-center","font-bold"],"attributes":{"id":"iqpzi9"},"components":[{"type":"textnode","content":"Login"}]},{"components":[{"tagName":"input","type":"form_input","void":true,"classes":["w-full","h-[40px]","border","border-[#D9D9D9]","text-[#252525]","p-4","rounded-14"],"attributes":{"type":"text","placeholder":"Email","id":"login-email"}},{"tagName":"input","type":"form_input","void":true,"classes":["w-full","h-[40px]","border","border-[#D9D9D9]","text-[#252525]","p-4","rounded-14","mt-3"],"attributes":{"type":"password","placeholder":"Password","id":"login-password"}},{"classes":["text-[14px]","text-[#ff0000]","px-2"],"attributes":{"id":"login-error-message"}},{"type":"comment","content":" <div class=\"flex justify-between items-center mt-1 px-2\">\n            <div\n              class=\"text-[14px] text-[#252525] underline cursor-pointer\"\n              onclick=\"window.location.href = '/change-password.html'\"\n            >\n              Change password\n            </div>\n            <div class=\"text-[14px] text-[#252525] underline cursor-pointer\">\n              Forgot password?\n            </div>\n          </div> "}]},{"tagName":"button","classes":["h-[40px]","bg-[#000000]","text-bold","text-[16px]","text-white","w-[200px]","mx-auto","rounded-full"],"attributes":{"id":"test-btn-2"},"components":[{"classes":["flex","justify-center","items-center","hidden"],"attributes":{"id":"login-loading-animation"},"components":[{"classes":["animate-spin","rounded-full","h-4","w-4","border-t-2","border-r-2","border-purple-500"]}]},{"type":"text","classes":["flex","justify-center","items-center"],"attributes":{"id":"login-loading-text"},"components":[{"type":"textnode","content":"\n            Login\n          "}]}]}]}]},{"type":"comment","content":" QR SCAN LIB "},{"type":"comment","content":"<script src=\"https://cdn.jsdelivr.net/npm/web3@4.8.0/dist/web3.min.js\"></script> "}],"head":{"type":"head"},"docEl":{"tagName":"html"},"contract":"---","metadata":"","api":"---"},"id":"V0kdtHyjzM4ZkZ9n"}],"type":"main","id":"nVTjlfQ4dZ82rHYg"},{"name":"change-password","frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"attributes":{"id":"irswg"},"components":[{"tagName":"meta","void":true,"attributes":{"charset":"UTF-8"}},{"tagName":"meta","void":true,"attributes":{"name":"viewport","content":"width=device-width, initial-scale=1.0"}},{"tagName":"link","void":true,"attributes":{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}},{"tagName":"link","void":true,"attributes":{"href":"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap","rel":"stylesheet"}},{"tagName":"link","void":true,"attributes":{"rel":"stylesheet","href":"index.css"}},{"tagName":"title","type":"text","attributes":{"id":"i8kdra"},"components":[{"type":"textnode","content":"Collectopia Admin Portal - Change Password"}]},{"type":"custom-code","resizable":true,"attributes":{"id":"igk4z7"},"components":[],"custom-code-plugin__code":"<style>\n  html {\n    scroll-behavior: smooth;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    overflow: auto !important;\n}\n\nhtml,\nbody {\n    font-family: Poppins, sans-serif;\n    font-weight: 400;\n}\n\nspan+span {\n    padding-left: 0.23em;\n}\n\n.modal-container {\n    background-image: linear-gradient(to right,\n            #1c1c1c 0%,\n            #4f4c3c 50%,\n            #1c1c1c 100%);\n    width: 100%;\n    height: 100%;\n}\n\n.max-w-1320 {\n    max-width: 1320px;\n}\n\n.max-w-1530 {\n    max-width: 1530px;\n}\n\n.max-w-1468 {\n    max-width: 1468px;\n}\n\n.btn-active {\n    background-color: #252525 !important;\n    height: 24px !important;\n    width: 24px !important;\n    color: #fff !important;\n    text-align: center !important;\n}\n\n.login-loading-btn {\n    background-color: #0000008d !important;\n}\n\n.rounded-14 {\n    border-radius: 14px;\n}\n\n.bg-gray-11 {\n    background-color: #F4F7F8;\n}\n</style>"},{"type":"custom-code","droppable":false,"resizable":true,"attributes":{"id":"ib34kg"},"components":[{"type":"script","components":[{"type":"textnode","content":"\n    window.onload = () => {\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        window.location.href = \"/index.html\";\n      }\n\n      const changePasswordBack = $(\"#change-password-back\");\n      const changePasswordBackSuccess = $(\"#change-password-back-success\");\n\n      changePasswordBack.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      changePasswordBackSuccess.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      const changePasswordOldPassword = $(\"#change-password-old-password\");\n      const changePasswordNewPassword = $(\"#change-password-new-password\");\n      const changePasswordConfirmNewPassword = $(\n        \"#change-password-confirm-new-password\"\n      );\n\n      const changePasswordError = $(\"#change-password-error\");\n      const changePasswordSuccess = $(\"#change-password-success\");\n      const changePasswordForm = $(\"#change-password-form\");\n      const changePasswordSubmit = $(\"#change-password-confirm-submit\");\n\n      changePasswordSubmit.on(\"click\", async () => {\n        $(\"#change-password-loading-animation\").removeClass(\"hidden\");\n        $(\"#change-password-loading-text\").addClass(\"hidden\");\n        if (\n          changePasswordConfirmNewPassword.val() !==\n          changePasswordNewPassword.val()\n        ) {\n          changePasswordError.text(\n            \"New password and confirm new password do not match\"\n          );\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          $(\"#change-password-loading-animation\").addClass(\"hidden\");\n          $(\"#change-password-loading-text\").removeClass(\"hidden\");\n          return null;\n        }\n\n        if (\n          changePasswordOldPassword.val() === \"\" ||\n          changePasswordNewPassword.val() === \"\" ||\n          changePasswordConfirmNewPassword.val() === \"\"\n        ) {\n          changePasswordError.text(\"Please enter all fields\");\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          $(\"#change-password-loading-animation\").addClass(\"hidden\");\n          $(\"#change-password-loading-text\").removeClass(\"hidden\");\n          return null;\n        }\n\n        try {\n          changePasswordSubmit.css(\"opacity\", \"0.5\");\n          changePasswordSubmit.prop(\"disabled\", true);\n          changePasswordOldPassword.prop(\"disabled\", true);\n          changePasswordNewPassword.prop(\"disabled\", true);\n          changePasswordConfirmNewPassword.prop(\"disabled\", true);\n          changePasswordError.text(\"\");\n          await fetch(`${BASE_URL}/admin/change-password`, {\n            headers: {\n              \"X-API-KEY\": X_API_KEY,\n              Authorization: `Bearer ${token}`,\n              Referer: REFERRER,\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n              old_password: changePasswordOldPassword.val(),\n              new_password: changePasswordNewPassword.val(),\n            }),\n          })\n            .then((res) => res.json())\n            .then((res) => {\n              if (res[0].data.status === false) {\n                changePasswordError.text(res[0].data.message);\n                changePasswordSubmit.css(\"opacity\", \"1\");\n                changePasswordSubmit.prop(\"disabled\", false);\n                changePasswordOldPassword.prop(\"disabled\", false);\n                changePasswordNewPassword.prop(\"disabled\", false);\n                changePasswordConfirmNewPassword.prop(\"disabled\", false);\n                $(\"#change-password-loading-animation\").addClass(\"hidden\");\n                $(\"#change-password-loading-text\").removeClass(\"hidden\");\n              } else {\n                changePasswordSuccess.removeClass(\"hidden\");\n                changePasswordForm.addClass(\"hidden\");\n              }\n            });\n        } catch (error) {\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          changePasswordOldPassword.prop(\"disabled\", false);\n          changePasswordNewPassword.prop(\"disabled\", false);\n          changePasswordConfirmNewPassword.prop(\"disabled\", false);\n          console.log(error);\n          changePasswordError.text(error.message);\n          return null;\n        }\n      });\n    };\n  "}]}],"custom-code-plugin__code":" <script>\n    window.onload = () => {\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        window.location.href = \"/index.html\";\n      }\n\n      const changePasswordBack = $(\"#change-password-back\");\n      const changePasswordBackSuccess = $(\"#change-password-back-success\");\n\n      changePasswordBack.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      changePasswordBackSuccess.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      const changePasswordOldPassword = $(\"#change-password-old-password\");\n      const changePasswordNewPassword = $(\"#change-password-new-password\");\n      const changePasswordConfirmNewPassword = $(\n        \"#change-password-confirm-new-password\"\n      );\n\n      const changePasswordError = $(\"#change-password-error\");\n      const changePasswordSuccess = $(\"#change-password-success\");\n      const changePasswordForm = $(\"#change-password-form\");\n      const changePasswordSubmit = $(\"#change-password-confirm-submit\");\n\n      changePasswordSubmit.on(\"click\", async () => {\n        $(\"#change-password-loading-animation\").removeClass(\"hidden\");\n        $(\"#change-password-loading-text\").addClass(\"hidden\");\n        if (\n          changePasswordConfirmNewPassword.val() !==\n          changePasswordNewPassword.val()\n        ) {\n          changePasswordError.text(\n            \"New password and confirm new password do not match\"\n          );\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          $(\"#change-password-loading-animation\").addClass(\"hidden\");\n          $(\"#change-password-loading-text\").removeClass(\"hidden\");\n          return null;\n        }\n\n        if (\n          changePasswordOldPassword.val() === \"\" ||\n          changePasswordNewPassword.val() === \"\" ||\n          changePasswordConfirmNewPassword.val() === \"\"\n        ) {\n          changePasswordError.text(\"Please enter all fields\");\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          $(\"#change-password-loading-animation\").addClass(\"hidden\");\n          $(\"#change-password-loading-text\").removeClass(\"hidden\");\n          return null;\n        }\n\n        try {\n          changePasswordSubmit.css(\"opacity\", \"0.5\");\n          changePasswordSubmit.prop(\"disabled\", true);\n          changePasswordOldPassword.prop(\"disabled\", true);\n          changePasswordNewPassword.prop(\"disabled\", true);\n          changePasswordConfirmNewPassword.prop(\"disabled\", true);\n          changePasswordError.text(\"\");\n          await fetch(`${BASE_URL}/admin/change-password`, {\n            headers: {\n              \"X-API-KEY\": X_API_KEY,\n              Authorization: `Bearer ${token}`,\n              Referer: REFERRER,\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n              old_password: changePasswordOldPassword.val(),\n              new_password: changePasswordNewPassword.val(),\n            }),\n          })\n            .then((res) => res.json())\n            .then((res) => {\n              if (res[0].data.status === false) {\n                changePasswordError.text(res[0].data.message);\n                changePasswordSubmit.css(\"opacity\", \"1\");\n                changePasswordSubmit.prop(\"disabled\", false);\n                changePasswordOldPassword.prop(\"disabled\", false);\n                changePasswordNewPassword.prop(\"disabled\", false);\n                changePasswordConfirmNewPassword.prop(\"disabled\", false);\n                $(\"#change-password-loading-animation\").addClass(\"hidden\");\n                $(\"#change-password-loading-text\").removeClass(\"hidden\");\n              } else {\n                changePasswordSuccess.removeClass(\"hidden\");\n                changePasswordForm.addClass(\"hidden\");\n              }\n            });\n        } catch (error) {\n          changePasswordSubmit.removeClass(\"login-loading\");\n          changePasswordSubmit.prop(\"disabled\", false);\n          changePasswordOldPassword.prop(\"disabled\", false);\n          changePasswordNewPassword.prop(\"disabled\", false);\n          changePasswordConfirmNewPassword.prop(\"disabled\", false);\n          console.log(error);\n          changePasswordError.text(error.message);\n          return null;\n        }\n      });\n    };\n  </script>"},{"classes":["flex","justify-center","items-center","h-screen","w-screen","bg-[#F4F7F8]"],"attributes":{"id":"i5kmfg"},"components":[{"classes":["w-[435px]","h-[380px]","bg-white","rounded-lg","p-6","flex","flex-col","justify-between"],"attributes":{"id":"change-password-form"},"components":[{"type":"text","classes":["text-[24px]","text-center","font-bold"],"attributes":{"id":"ics5el"},"components":[{"type":"textnode","content":"Change password"}]},{"components":[{"tagName":"input","type":"form_input","void":true,"classes":["w-full","h-[40px]",{"name":"rounded--14px-","label":"rounded-[14px]"},"border","border-[#D9D9D9]","text-[#252525]","p-4","mt-3","rounded-14"],"attributes":{"type":"password","placeholder":"Old Password","id":"change-password-old-password"}},{"tagName":"input","type":"form_input","void":true,"classes":["w-full","h-[40px]",{"name":"rounded--14px-","label":"rounded-[14px]"},"border","border-[#D9D9D9]","text-[#252525]","p-4","mt-3","rounded-14"],"attributes":{"type":"password","placeholder":"New Password","id":"change-password-new-password"}},{"tagName":"input","type":"form_input","void":true,"classes":["w-full","h-[40px]",{"name":"rounded--14px-","label":"rounded-[14px]"},"border","border-[#D9D9D9]","text-[#252525]","p-4","mt-3","rounded-14"],"attributes":{"type":"password","placeholder":"Confirm New Password","id":"change-password-confirm-new-password"}},{"classes":["text-[14px]","text-[#ff0000]","px-2"],"attributes":{"id":"change-password-error"}}]},{"classes":["flex","justify-between","items-center","mt-1","px-2"],"components":[{"type":"text","classes":["text-[14px]","text-[#252525]","underline","cursor-pointer"],"attributes":{"id":"change-password-back"},"components":[{"type":"textnode","content":"\n            Back\n          "}]}]},{"tagName":"button","classes":["h-[40px]","bg-[#000000]","text-bold","text-[16px]","text-white","w-[200px]","mx-auto","rounded-full"],"attributes":{"id":"change-password-confirm-submit"},"components":[{"classes":["flex","justify-center","items-center","hidden"],"attributes":{"id":"change-password-loading-animation"},"components":[{"classes":["animate-spin","rounded-full","h-4","w-4","border-t-2","border-r-2","border-purple-500"]}]},{"type":"text","classes":["flex","justify-center","items-center"],"attributes":{"id":"change-password-loading-text"},"components":[{"type":"textnode","content":"\n            Confirm\n          "}]}]}]},{"classes":["w-[435px]","h-[380px]","bg-white","rounded-lg","p-6","flex","flex-col","justify-between","hidden"],"attributes":{"id":"change-password-success"},"components":[{"type":"text","classes":["text-[24px]","text-center","font-bold"],"attributes":{"id":"i3wmb6"},"components":[{"type":"textnode","content":"Change password"}]},{"type":"text","classes":["text-[24px]","text-[#252525]","cursor-pointer"],"attributes":{"id":"ilhl98"},"components":[{"type":"textnode","content":"\n          Password changed successfully\n        "}]},{"classes":["flex","justify-center","items-center","mt-1","px-2"],"components":[{"type":"text","classes":["text-[20px]","text-[#252525]","underline","cursor-pointer"],"attributes":{"id":"change-password-back-success"},"components":[{"type":"textnode","content":"\n            Back\n          "}]}]}]}]},{"type":"comment","content":" QR SCAN LIB "},{"type":"comment","content":"<script src=\"https://cdn.jsdelivr.net/npm/web3@4.8.0/dist/web3.min.js\"></script> "}],"head":{"type":"head"},"docEl":{"tagName":"html"},"contract":"---","metadata":"","api":"---"},"id":"txRs1Zhe8zxRflA6"}],"id":"r2mKhMK6YUkUqWZjdo"},{"name":"transaction","frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"attributes":{"id":"i3kn2"},"components":[{"tagName":"meta","void":true,"attributes":{"charset":"UTF-8"}},{"tagName":"meta","void":true,"attributes":{"name":"viewport","content":"width=device-width, initial-scale=1.0"}},{"tagName":"link","void":true,"attributes":{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}},{"tagName":"link","void":true,"attributes":{"href":"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap","rel":"stylesheet"}},{"tagName":"link","void":true,"attributes":{"rel":"stylesheet","href":"index.css"}},{"tagName":"title","type":"text","attributes":{"id":"itx9s8"},"components":[{"type":"textnode","content":"Collectopia Admin Portal - Transactions"}]},{"type":"custom-code","droppable":false,"resizable":true,"attributes":{"id":"ih6hxl"},"components":[{"type":"script","components":[{"type":"textnode","content":"\n    window.onload = () => {\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n\n      /**\n       * @template T\n       * @param {T} initialValue\n       * @param {string} name: If name different undefined will auto save to localStorage\n       * @returns {{value: T, setValue: (value:T)=> void, callbacks:((value:T,oldValue:T)=> void)[]}}\n       */\n      const useState = (initialValue, name) => {\n        const state = {\n          value: initialValue,\n          setValue: (value) => {\n            const oldValue = state.value;\n            state.value = value;\n            if (name) {\n              if (typeof value === \"string\") {\n                if (value) localStorage.setItem(name, value);\n                else localStorage.removeItem(name);\n              } else\n                console.error(\n                  \"Auto save localstorage only supported string value\"\n                );\n            }\n            if (value !== oldValue)\n              state.callbacks.map((cb) => cb(value, oldValue));\n          },\n          callbacks: [],\n        };\n        return state;\n      };\n\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        window.location.href = \"/\";\n      }\n\n      const profileTabChangePassword = $(\"#transaction-change-password\");\n      const profileTabLogout = $(\"#transaction-logout\");\n      const profileTabProfile = $(\"#transaction-transaction\");\n\n      profileTabChangePassword.on(\"click\", () => {\n        window.location.href = \"/change-password.html\";\n      });\n\n      profileTabLogout.on(\"click\", () => {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/index.html\";\n      });\n\n      profileTabProfile.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      const profileList = useState(null, []);\n      const loadingProfile = useState(false, \"loading-transaction\");\n      const total = useState(1, \"total\");\n      const page = useState(1, \"page\");\n      const getProfile = async (\n        page_number = 1,\n        text = \"\",\n        setLoading = true\n      ) => {\n        if (setLoading) {\n          loadingProfile.setValue(true);\n          total.setValue(0);\n        }\n\n        if (text) {\n          page.setValue(1);\n        }\n\n        let url = `${BASE_URL}/admin/transactions?page_number=${page_number}`;\n        if (text) {\n          url += `&search=${text}`;\n        }\n\n        const response = await fetch(url, {\n          headers: {\n            \"X-API-KEY\": X_API_KEY,\n            Authorization: `Bearer ${token}`,\n            Referer: REFERRER,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const data = await response\n          .json()\n          .then((res) => {\n            profileList.setValue(\n              JSON.stringify(Object.values(res[0].data.transactions))\n            );\n            total.setValue(res[0].data.meta.count || 0);\n          })\n          .finally(() => {\n            setLoading && loadingProfile.setValue(false);\n          });\n      };\n\n      loadingProfile.callbacks.push((value, oldValue) => {\n        if (value) {\n          $(\"#loading-transaction\").removeClass(\"hidden\");\n          $(\"#transaction-table\").addClass(\"hidden\");\n        } else {\n          $(\"#loading-transaction\").addClass(\"hidden\");\n          $(\"#transaction-table\").removeClass(\"hidden\");\n        }\n      });\n\n      profileList.callbacks.push((value, oldValue) => {\n        const profileTemplate = $(\"#transaction-table-row\");\n\n        // Remove old NFT item\n        if (JSON.parse(oldValue || \"[]\").length)\n          $(\"#transaction-table-body\").find(\".remove-row\").remove();\n\n        if ((JSON.parse(value) || []).length === 0) {\n          $(\"#transaction-table-body\").find(\".remove-row\").remove();\n          $(\"#pagination\").find(\".btn-pagination-render\").remove();\n          $(\"#transaction-table-body\").append(\n            `<tr class=\"remove-row-no-data\">\n              <td colspan=\"6\" class=\"text-center\">No data</td>\n            </tr>`\n          );\n        }\n\n        // Render NFT item\n        (JSON.parse(value) || []).forEach((item, index) => {\n          const profileRow = profileTemplate.clone();\n          $(\"#transaction-table-body\").find(\".remove-row-no-data\").remove();\n          // Show all columns by removing hidden class\n          profileRow.addClass(\"remove-row\");\n          profileRow.find(\"td\").removeClass(\"hidden\");\n\n          // Set data for each column\n          profileRow\n            .find(\".transaction-table-col-name\")\n            .text(item.tx_hash || \"-\");\n          profileRow\n            .find(\".transaction-table-col-username\")\n            .text(item.username || \"-\");\n          profileRow\n            .find(\".transaction-table-col-walletaress\")\n            .text(item.wallet_address || \"-\");\n          profileRow\n            .find(\".transaction-table-col-email\")\n            .text(item.price || \"-\");\n          profileRow\n            .find(\".transaction-table-col-phone\")\n            .text(\n              item.created_at\n                ? new Date(+item.created_at).toLocaleDateString()\n                : \"-\"\n            );\n\n          profileRow\n            .find(\".transaction-table-col-joined_date\")\n            .text(\n              item.status\n                ? item.status === \"mint_successed\"\n                  ? \"Mint Successed\"\n                  : item.status === \"minting\"\n                  ? \"Minting\"\n                  : item.status === \"created\"\n                  ? \"Created\"\n                  : \"\"\n                : \"-\"\n            );\n\n          // Add row to table body\n          $(\"#transaction-table-body\").append(profileRow);\n        });\n      });\n\n      total.callbacks.push((value, oldValue) => {\n        const pagination = $(\"#pagination\");\n        const totalPage = Math.ceil(value / 10);\n        const btnTemplate = pagination.find(\".pagination-btn-template\");\n        // pagination.empty();\n        $(\".btn-pagination-render\").remove();\n        for (let i = 1; i <= totalPage; i++) {\n          if (i === 1) {\n            const btn = btnTemplate\n              .clone()\n              .removeClass(\"hidden pagination-btn-template\")\n              .addClass(\"btn-pagination-render\")\n              .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n            btn.text(i);\n            pagination.append(btn);\n\n            if (page.value > 3) {\n              const btnDots = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\");\n              btnDots.text(\"...\");\n              pagination.append(btnDots);\n            }\n\n            btn.on(\"click\", () => {\n              page.setValue(i);\n              total.setValue(total.value);\n              $(\"#pagination\")\n                .find(\".btn-pagination\")\n                .removeClass(\"bg-[#252525] text-white\");\n              btn.addClass(\"btn-active\");\n              getProfile(i);\n            });\n          } else if (i === totalPage) {\n            if (page.value < totalPage - 2) {\n              const btnDots = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\");\n              btnDots.text(\"...\");\n              pagination.append(btnDots);\n            }\n\n            const btn = btnTemplate\n              .clone()\n              .removeClass(\"hidden pagination-btn-template\")\n              .addClass(\"btn-pagination-render\")\n              .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n            btn.text(i);\n            pagination.append(btn);\n            btn.on(\"click\", () => {\n              page.setValue(i);\n              total.setValue(total.value);\n              $(\"#pagination\")\n                .find(\".btn-pagination\")\n                .removeClass(\"bg-[#252525] text-white\");\n              btn.addClass(\"bg-[#252525] text-white\");\n              getProfile(i);\n            });\n          } else {\n            if (\n              i === page.value - 1 ||\n              i === page.value + 1 ||\n              i === page.value - 2 ||\n              i === page.value + 2 ||\n              i === page.value\n            ) {\n              const btn = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\")\n                .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n              btn.text(i);\n              pagination.append(btn);\n              btn.on(\"click\", () => {\n                page.setValue(i);\n                total.setValue(total.value);\n                $(\"#pagination\")\n                  .find(\".btn-pagination\")\n                  .removeClass(\"bg-[#252525] text-white\");\n                btn.addClass(\"bg-[#252525] text-white\");\n                getProfile(i);\n              });\n            }\n          }\n        }\n      });\n\n      $(\"#transaction-search-input\").on(\"keyup\", (e) => {\n        if (e.key === \"Enter\") {\n          getProfile(1, e.target.value);\n        }\n      });\n\n      getProfile(1);\n\n      setInterval(() => {\n        const textSearch = $(\"#transaction-search-input\").val();\n        if (textSearch) {\n          getProfile(1, textSearch, false);\n        } else {\n          getProfile(page.value, \"\", false);\n        }\n      }, 10000);\n    };\n  "}]}],"custom-code-plugin__code":"  <script>\n    window.onload = () => {\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n\n      /**\n       * @template T\n       * @param {T} initialValue\n       * @param {string} name: If name different undefined will auto save to localStorage\n       * @returns {{value: T, setValue: (value:T)=> void, callbacks:((value:T,oldValue:T)=> void)[]}}\n       */\n      const useState = (initialValue, name) => {\n        const state = {\n          value: initialValue,\n          setValue: (value) => {\n            const oldValue = state.value;\n            state.value = value;\n            if (name) {\n              if (typeof value === \"string\") {\n                if (value) localStorage.setItem(name, value);\n                else localStorage.removeItem(name);\n              } else\n                console.error(\n                  \"Auto save localstorage only supported string value\"\n                );\n            }\n            if (value !== oldValue)\n              state.callbacks.map((cb) => cb(value, oldValue));\n          },\n          callbacks: [],\n        };\n        return state;\n      };\n\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        window.location.href = \"/\";\n      }\n\n      const profileTabChangePassword = $(\"#transaction-change-password\");\n      const profileTabLogout = $(\"#transaction-logout\");\n      const profileTabProfile = $(\"#transaction-transaction\");\n\n      profileTabChangePassword.on(\"click\", () => {\n        window.location.href = \"/change-password.html\";\n      });\n\n      profileTabLogout.on(\"click\", () => {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/index.html\";\n      });\n\n      profileTabProfile.on(\"click\", () => {\n        window.location.href = \"/profile.html\";\n      });\n\n      const profileList = useState(null, []);\n      const loadingProfile = useState(false, \"loading-transaction\");\n      const total = useState(1, \"total\");\n      const page = useState(1, \"page\");\n      const getProfile = async (\n        page_number = 1,\n        text = \"\",\n        setLoading = true\n      ) => {\n        if (setLoading) {\n          loadingProfile.setValue(true);\n          total.setValue(0);\n        }\n\n        if (text) {\n          page.setValue(1);\n        }\n\n        let url = `${BASE_URL}/admin/transactions?page_number=${page_number}`;\n        if (text) {\n          url += `&search=${text}`;\n        }\n\n        const response = await fetch(url, {\n          headers: {\n            \"X-API-KEY\": X_API_KEY,\n            Authorization: `Bearer ${token}`,\n            Referer: REFERRER,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const data = await response\n          .json()\n          .then((res) => {\n            profileList.setValue(\n              JSON.stringify(Object.values(res[0].data.transactions))\n            );\n            total.setValue(res[0].data.meta.count || 0);\n          })\n          .finally(() => {\n            setLoading && loadingProfile.setValue(false);\n          });\n      };\n\n      loadingProfile.callbacks.push((value, oldValue) => {\n        if (value) {\n          $(\"#loading-transaction\").removeClass(\"hidden\");\n          $(\"#transaction-table\").addClass(\"hidden\");\n        } else {\n          $(\"#loading-transaction\").addClass(\"hidden\");\n          $(\"#transaction-table\").removeClass(\"hidden\");\n        }\n      });\n\n      profileList.callbacks.push((value, oldValue) => {\n        const profileTemplate = $(\"#transaction-table-row\");\n\n        // Remove old NFT item\n        if (JSON.parse(oldValue || \"[]\").length)\n          $(\"#transaction-table-body\").find(\".remove-row\").remove();\n\n        if ((JSON.parse(value) || []).length === 0) {\n          $(\"#transaction-table-body\").find(\".remove-row\").remove();\n          $(\"#pagination\").find(\".btn-pagination-render\").remove();\n          $(\"#transaction-table-body\").append(\n            `<tr class=\"remove-row-no-data\">\n              <td colspan=\"6\" class=\"text-center\">No data</td>\n            </tr>`\n          );\n        }\n\n        // Render NFT item\n        (JSON.parse(value) || []).forEach((item, index) => {\n          const profileRow = profileTemplate.clone();\n          $(\"#transaction-table-body\").find(\".remove-row-no-data\").remove();\n          // Show all columns by removing hidden class\n          profileRow.addClass(\"remove-row\");\n          profileRow.find(\"td\").removeClass(\"hidden\");\n\n          // Set data for each column\n          profileRow\n            .find(\".transaction-table-col-name\")\n            .text(item.tx_hash || \"-\");\n          profileRow\n            .find(\".transaction-table-col-username\")\n            .text(item.username || \"-\");\n          profileRow\n            .find(\".transaction-table-col-walletaress\")\n            .text(item.wallet_address || \"-\");\n          profileRow\n            .find(\".transaction-table-col-email\")\n            .text(item.price || \"-\");\n          profileRow\n            .find(\".transaction-table-col-phone\")\n            .text(\n              item.created_at\n                ? new Date(+item.created_at).toLocaleDateString()\n                : \"-\"\n            );\n\n          profileRow\n            .find(\".transaction-table-col-joined_date\")\n            .text(\n              item.status\n                ? item.status === \"mint_successed\"\n                  ? \"Mint Successed\"\n                  : item.status === \"minting\"\n                  ? \"Minting\"\n                  : item.status === \"created\"\n                  ? \"Created\"\n                  : \"\"\n                : \"-\"\n            );\n\n          // Add row to table body\n          $(\"#transaction-table-body\").append(profileRow);\n        });\n      });\n\n      total.callbacks.push((value, oldValue) => {\n        const pagination = $(\"#pagination\");\n        const totalPage = Math.ceil(value / 10);\n        const btnTemplate = pagination.find(\".pagination-btn-template\");\n        // pagination.empty();\n        $(\".btn-pagination-render\").remove();\n        for (let i = 1; i <= totalPage; i++) {\n          if (i === 1) {\n            const btn = btnTemplate\n              .clone()\n              .removeClass(\"hidden pagination-btn-template\")\n              .addClass(\"btn-pagination-render\")\n              .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n            btn.text(i);\n            pagination.append(btn);\n\n            if (page.value > 3) {\n              const btnDots = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\");\n              btnDots.text(\"...\");\n              pagination.append(btnDots);\n            }\n\n            btn.on(\"click\", () => {\n              page.setValue(i);\n              total.setValue(total.value);\n              $(\"#pagination\")\n                .find(\".btn-pagination\")\n                .removeClass(\"bg-[#252525] text-white\");\n              btn.addClass(\"btn-active\");\n              getProfile(i);\n            });\n          } else if (i === totalPage) {\n            if (page.value < totalPage - 2) {\n              const btnDots = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\");\n              btnDots.text(\"...\");\n              pagination.append(btnDots);\n            }\n\n            const btn = btnTemplate\n              .clone()\n              .removeClass(\"hidden pagination-btn-template\")\n              .addClass(\"btn-pagination-render\")\n              .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n            btn.text(i);\n            pagination.append(btn);\n            btn.on(\"click\", () => {\n              page.setValue(i);\n              total.setValue(total.value);\n              $(\"#pagination\")\n                .find(\".btn-pagination\")\n                .removeClass(\"bg-[#252525] text-white\");\n              btn.addClass(\"bg-[#252525] text-white\");\n              getProfile(i);\n            });\n          } else {\n            if (\n              i === page.value - 1 ||\n              i === page.value + 1 ||\n              i === page.value - 2 ||\n              i === page.value + 2 ||\n              i === page.value\n            ) {\n              const btn = btnTemplate\n                .clone()\n                .removeClass(\"hidden pagination-btn-template\")\n                .addClass(\"btn-pagination-render\")\n                .addClass(i === page.value ? \"bg-[#252525] text-white\" : \"\");\n\n              btn.text(i);\n              pagination.append(btn);\n              btn.on(\"click\", () => {\n                page.setValue(i);\n                total.setValue(total.value);\n                $(\"#pagination\")\n                  .find(\".btn-pagination\")\n                  .removeClass(\"bg-[#252525] text-white\");\n                btn.addClass(\"bg-[#252525] text-white\");\n                getProfile(i);\n              });\n            }\n          }\n        }\n      });\n\n      $(\"#transaction-search-input\").on(\"keyup\", (e) => {\n        if (e.key === \"Enter\") {\n          getProfile(1, e.target.value);\n        }\n      });\n\n      getProfile(1);\n\n      setInterval(() => {\n        const textSearch = $(\"#transaction-search-input\").val();\n        if (textSearch) {\n          getProfile(1, textSearch, false);\n        } else {\n          getProfile(page.value, \"\", false);\n        }\n      }, 10000);\n    };\n  </script>"},{"classes":["bg-[#F4F7F8]","min-h-screen"],"components":[{"classes":["flex","justify-between","items-center","px-10","bg-white"],"components":[{"attributes":{"id":"ibi3rx"}},{"classes":["flex","justify-center","items-center","w-screen","bg-white","gap-x-10"],"components":[{"type":"text","classes":["text-[14px]","text-[#252525]","py-5","cursor-pointer"],"attributes":{"id":"icgh5z"},"components":[{"type":"textnode","content":"\n            Summary\n          "}]},{"type":"text","classes":["text-[14px]","text-[#252525]","cursor-pointer"],"attributes":{"id":"transaction-transaction"},"components":[{"type":"textnode","content":"\n            Profile\n          "}]},{"type":"text","classes":["text-[14px]","text-[#252525]","py-5","font-bold","border-b","border-[#E8D65F]","cursor-pointer"],"attributes":{"id":"ii32jb"},"components":[{"type":"textnode","content":"\n            Transactions\n          "}]}]},{"classes":["flex","gap-x-10"],"components":[{"type":"text","classes":["cursor-pointer","w-max"],"attributes":{"id":"transaction-change-password"},"components":[{"type":"textnode","content":"\n            Change password\n          "}]},{"type":"text","classes":["cursor-pointer"],"attributes":{"id":"transaction-logout"},"components":[{"type":"textnode","content":"Logout"}]}]}]},{"classes":["mt-4"],"components":[{"classes":["flex","gap-x-10","items-center","px-10","mt-4"],"components":[{"type":"text","classes":["text-[24px]","text-[#252525]","font-bold"],"attributes":{"id":"iiutnq"},"components":[{"type":"textnode","content":"\n            Transaction Management\n          "}]},{"tagName":"input","type":"form_input","void":true,"classes":["w-[300px]","h-[40px]","border","border-[#D9D9D9]","text-[#252525]","p-4","rounded-14"],"attributes":{"type":"text","placeholder":"Search","id":"transaction-search-input"}}]},{"classes":["flex","justify-center","items-center","px-10","mt-10","hidden"],"attributes":{"id":"loading-transaction"},"components":[{"classes":["text-[14px]","text-[#252525]","font-bold"],"components":[{"classes":["flex","space-x-2"],"components":[{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce",{"name":"-animation-delay:-0-3s-","label":"[animation-delay:-0.3s]"}]},{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce",{"name":"-animation-delay:-0-15s-","label":"[animation-delay:-0.15s]"}]},{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce"]}]}]}]},{"classes":["px-10","mt-10"],"attributes":{"id":"transaction-table"},"components":[{"classes":["overflow-x-auto"],"components":[{"type":"table","droppable":["tbody","thead","tfoot"],"classes":["w-full","border-separate","border-spacing-y-2"],"components":[{"type":"thead","draggable":["table"],"droppable":["tr"],"components":[{"type":"row","draggable":["thead","tbody","tfoot"],"droppable":["th","td"],"components":[{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2","py-2"],"components":[{"type":"textnode","content":"\n                    TxID\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    @username\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    Wallet Address\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    total amount\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    date created\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    Status\n                  "}]}]}]},{"type":"tbody","draggable":["table"],"droppable":["tr"],"classes":["mt-4"],"attributes":{"id":"transaction-table-body"},"components":[{"type":"row","draggable":["thead","tbody","tfoot"],"droppable":["th","td"],"classes":["bg-white"],"attributes":{"id":"transaction-table-row"},"components":[{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-name"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-username"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-walletaress"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-email"],"attributes":{"id":"iamfe7"}},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-phone"],"attributes":{"id":"iemduv"}},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","transaction-table-col-joined_date"],"attributes":{"id":"ipgb6w"}}]}]}]}]},{"classes":["flex","gap-x-2","items-center"],"attributes":{"id":"pagination"},"components":[{"tagName":"button","classes":["text-[16px]","font-bold","mt-4","bg-transparent","text-[#252525]","w-[24px]","h-[24px]","pagination-btn-template","btn-pagination"]}]}]}]}]},{"type":"comment","content":" QR SCAN LIB "},{"type":"comment","content":"<script src=\"https://cdn.jsdelivr.net/npm/web3@4.8.0/dist/web3.min.js\"></script> "}],"head":{"type":"head"},"docEl":{"tagName":"html"},"contract":"---","metadata":"","api":"---"},"id":"qYQLD7pDbROe90DK"}],"id":"EgDhdThIG2mttqt5U4Z"},{"name":"profile","frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"attributes":{"id":"im7ivn"},"components":[{"tagName":"meta","void":true,"attributes":{"charset":"UTF-8"}},{"tagName":"meta","void":true,"attributes":{"name":"viewport","content":"width=device-width, initial-scale=1.0"}},{"tagName":"link","void":true,"attributes":{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}},{"tagName":"link","void":true,"attributes":{"href":"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap","rel":"stylesheet"}},{"tagName":"link","void":true,"attributes":{"rel":"stylesheet","href":"index.css"}},{"tagName":"title","type":"text","attributes":{"id":"ilb6yh"},"components":[{"type":"textnode","content":"Collectopia Admin Portal - Profile"}]},{"type":"custom-code","droppable":false,"resizable":true,"attributes":{"id":"ix36xi"},"components":[{"type":"script","components":[{"type":"textnode","content":"\n    window.onload = () => {\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n\n      /**\n       * @template T\n       * @param {T} initialValue\n       * @param {string} name: If name different undefined will auto save to localStorage\n       * @returns {{value: T, setValue: (value:T)=> void, callbacks:((value:T,oldValue:T)=> void)[]}}\n       */\n      const useState = (initialValue, name) => {\n        const state = {\n          value: initialValue,\n          setValue: (value) => {\n            const oldValue = state.value;\n            state.value = value;\n            if (name) {\n              if (typeof value === \"string\") {\n                if (value) localStorage.setItem(name, value);\n                else localStorage.removeItem(name);\n              } else\n                console.error(\n                  \"Auto save localstorage only supported string value\"\n                );\n            }\n            if (value !== oldValue)\n              state.callbacks.map((cb) => cb(value, oldValue));\n          },\n          callbacks: [],\n        };\n        return state;\n      };\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        window.location.href = \"/index.html\";\n      }\n\n      const profileList = useState([], \"profile-list\");\n\n      const profileTabChangePassword = $(\"#profile-tab-change-password\");\n      const profileTabTransactions = $(\"#profile-tab-transactions\");\n      const profileTabLogout = $(\"#profiletab-logout\");\n\n      profileTabChangePassword.on(\"click\", () => {\n        window.location.href = \"/change-password.html\";\n      });\n\n      profileTabLogout.on(\"click\", () => {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/index.html\";\n      });\n\n      profileTabTransactions.on(\"click\", () => {\n        window.location.href = \"/transaction.html\";\n      });\n\n      const loadingProfile = useState(true, \"loading-profile\");\n      const getProfile = async () => {\n        loadingProfile.setValue(true);\n        const response = await fetch(`${BASE_URL}/admin/user-profile`, {\n          headers: {\n            \"X-API-KEY\": X_API_KEY,\n            Authorization: `Bearer ${token}`,\n            Referer: REFERRER,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const data = await response\n          .json()\n          .then((res) => {\n            profileList.setValue(\n              JSON.stringify(Object.values(res[0].data.users))\n            );\n          })\n          .finally(() => {\n            loadingProfile.setValue(false);\n          });\n      };\n\n      loadingProfile.callbacks.push((value, oldValue) => {\n        if (value) {\n          $(\"#loading-profile\").removeClass(\"hidden\");\n        } else {\n          $(\"#loading-profile\").addClass(\"hidden\");\n          $(\"#profile-table-table\").removeClass(\"hidden\");\n        }\n      });\n\n      profileList.callbacks.push((value, oldValue) => {\n        const profileTemplate = $(\"#profile-table-table-row\");\n\n        // Remove old NFT item\n        if (oldValue.length > 0 ? JSON.parse(oldValue) : [])\n          $(\"#profile-table-table-body\").empty();\n\n        // Render NFT item\n        (JSON.parse(value) || []).forEach((item, index) => {\n          console.log(\"🚀 ~ item:\", item);\n          const profileRow = profileTemplate.clone();\n          // Show all columns by removing hidden class\n          profileRow.find(\"td\").removeClass(\"hidden\");\n\n          // Set data for each column\n          profileRow\n            .find(\".profile-table-table-col-name\")\n            .text(item.fullname || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-username\")\n            .text(item.username || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-walletaress\")\n            .text(item.wallet_address || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-email\")\n            .text(item.email || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-phone\")\n            .text(item.phone_number || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-joined_date\")\n            .text(\n              item.created_at\n                ? new Date(item.created_at).toLocaleDateString()\n                : \"-\"\n            );\n\n          // Add row to table body\n          $(\"#profile-table-table-body\").append(profileRow);\n        });\n      });\n\n      getProfile();\n    };\n  "}]}],"custom-code-plugin__code":"  <script>\n    window.onload = () => {\n      const X_API_KEY = \"ToVi388ImKgaGtK00srdyndmAQaKQZbzZKeoHk+JX+Y=\";\n      const REFERRER = \"morpheuslabs.io\";\n      const BASE_URL =\n        \"https://wfstudiobe.morpheuslabs.io/api/v1/webhooks/cardtopia\";\n\n      /**\n       * @template T\n       * @param {T} initialValue\n       * @param {string} name: If name different undefined will auto save to localStorage\n       * @returns {{value: T, setValue: (value:T)=> void, callbacks:((value:T,oldValue:T)=> void)[]}}\n       */\n      const useState = (initialValue, name) => {\n        const state = {\n          value: initialValue,\n          setValue: (value) => {\n            const oldValue = state.value;\n            state.value = value;\n            if (name) {\n              if (typeof value === \"string\") {\n                if (value) localStorage.setItem(name, value);\n                else localStorage.removeItem(name);\n              } else\n                console.error(\n                  \"Auto save localstorage only supported string value\"\n                );\n            }\n            if (value !== oldValue)\n              state.callbacks.map((cb) => cb(value, oldValue));\n          },\n          callbacks: [],\n        };\n        return state;\n      };\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        window.location.href = \"/index.html\";\n      }\n\n      const profileList = useState([], \"profile-list\");\n\n      const profileTabChangePassword = $(\"#profile-tab-change-password\");\n      const profileTabTransactions = $(\"#profile-tab-transactions\");\n      const profileTabLogout = $(\"#profiletab-logout\");\n\n      profileTabChangePassword.on(\"click\", () => {\n        window.location.href = \"/change-password.html\";\n      });\n\n      profileTabLogout.on(\"click\", () => {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/index.html\";\n      });\n\n      profileTabTransactions.on(\"click\", () => {\n        window.location.href = \"/transaction.html\";\n      });\n\n      const loadingProfile = useState(true, \"loading-profile\");\n      const getProfile = async () => {\n        loadingProfile.setValue(true);\n        const response = await fetch(`${BASE_URL}/admin/user-profile`, {\n          headers: {\n            \"X-API-KEY\": X_API_KEY,\n            Authorization: `Bearer ${token}`,\n            Referer: REFERRER,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const data = await response\n          .json()\n          .then((res) => {\n            profileList.setValue(\n              JSON.stringify(Object.values(res[0].data.users))\n            );\n          })\n          .finally(() => {\n            loadingProfile.setValue(false);\n          });\n      };\n\n      loadingProfile.callbacks.push((value, oldValue) => {\n        if (value) {\n          $(\"#loading-profile\").removeClass(\"hidden\");\n        } else {\n          $(\"#loading-profile\").addClass(\"hidden\");\n          $(\"#profile-table-table\").removeClass(\"hidden\");\n        }\n      });\n\n      profileList.callbacks.push((value, oldValue) => {\n        const profileTemplate = $(\"#profile-table-table-row\");\n\n        // Remove old NFT item\n        if (oldValue.length > 0 ? JSON.parse(oldValue) : [])\n          $(\"#profile-table-table-body\").empty();\n\n        // Render NFT item\n        (JSON.parse(value) || []).forEach((item, index) => {\n          console.log(\"🚀 ~ item:\", item);\n          const profileRow = profileTemplate.clone();\n          // Show all columns by removing hidden class\n          profileRow.find(\"td\").removeClass(\"hidden\");\n\n          // Set data for each column\n          profileRow\n            .find(\".profile-table-table-col-name\")\n            .text(item.fullname || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-username\")\n            .text(item.username || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-walletaress\")\n            .text(item.wallet_address || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-email\")\n            .text(item.email || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-phone\")\n            .text(item.phone_number || \"-\");\n          profileRow\n            .find(\".profile-table-table-col-joined_date\")\n            .text(\n              item.created_at\n                ? new Date(item.created_at).toLocaleDateString()\n                : \"-\"\n            );\n\n          // Add row to table body\n          $(\"#profile-table-table-body\").append(profileRow);\n        });\n      });\n\n      getProfile();\n    };\n  </script>"},{"classes":["min-h-screen","bg-[#F4F7F8]"],"components":[{"classes":["flex","justify-between","items-center","px-10","bg-white"],"components":[{"attributes":{"id":"ib273y"}},{"classes":["flex","justify-center","items-center","w-screen","bg-white","gap-x-10"],"components":[{"type":"text","classes":["text-[14px]","text-[#252525]","py-5","cursor-pointer"],"attributes":{"id":"ixkraz"},"components":[{"type":"textnode","content":"\n            Summary\n          "}]},{"type":"text","classes":["text-[14px]","text-[#252525]","font-bold","py-5","border-b","border-[#E8D65F]"],"attributes":{"id":"ih69jf"},"components":[{"type":"textnode","content":"\n            Profile\n          "}]},{"type":"text","classes":["text-[14px]","text-[#252525]","py-5","cursor-pointer"],"attributes":{"id":"profile-tab-transactions"},"components":[{"type":"textnode","content":"\n            Transactions\n          "}]}]},{"classes":["flex","gap-x-10"],"components":[{"type":"text","classes":["cursor-pointer","w-max"],"attributes":{"id":"profile-tab-change-password"},"components":[{"type":"textnode","content":"\n            Change password\n          "}]},{"type":"text","classes":["cursor-pointer"],"attributes":{"id":"profiletab-logout"},"components":[{"type":"textnode","content":"\n            Logout\n          "}]}]}]},{"classes":["mt-4"],"components":[{"classes":["flex","gap-x-10","items-center","px-10","mt-4"],"components":[{"type":"text","classes":["text-[24px]","text-[#252525]","font-bold"],"attributes":{"id":"iyscgy"},"components":[{"type":"textnode","content":"\n            Profile Management\n          "}]},{"tagName":"input","type":"form_input","void":true,"classes":["w-[300px]","h-[40px]","border","border-[#D9D9D9]","text-[#252525]","p-4","rounded-14"],"attributes":{"type":"text","placeholder":"Search"}}]},{"classes":["flex","justify-center","items-center","px-10","mt-10"],"attributes":{"id":"loading-profile"},"components":[{"classes":["text-[14px]","text-[#252525]","font-bold"],"components":[{"classes":["text-[14px]","text-[#252525]","font-bold"],"components":[{"classes":["flex","space-x-2"],"components":[{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce",{"name":"-animation-delay:-0-3s-","label":"[animation-delay:-0.3s]"}]},{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce",{"name":"-animation-delay:-0-15s-","label":"[animation-delay:-0.15s]"}]},{"classes":["w-4","h-4","bg-blue-500","rounded-full","animate-bounce"]}]}]}]}]},{"classes":["px-10","mt-10","hidden"],"attributes":{"id":"profile-table-table"},"components":[{"components":[{"type":"table","droppable":["tbody","thead","tfoot"],"classes":["w-full","border-separate","border-spacing-y-2"],"components":[{"type":"thead","draggable":["table"],"droppable":["tr"],"components":[{"type":"row","draggable":["thead","tbody","tfoot"],"droppable":["th","td"],"components":[{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2","py-2"],"components":[{"type":"textnode","content":"\n                    Name\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    @username\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    Wallet Address\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    email\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    phone\n                  "}]},{"tagName":"th","type":"cell","draggable":["tr"],"classes":["text-[14px]","text-[#252525]","font-light","text-left","px-2"],"components":[{"type":"textnode","content":"\n                    joined date\n                  "}]}]}]},{"type":"tbody","draggable":["table"],"droppable":["tr"],"classes":["mt-4"],"attributes":{"id":"profile-table-table-body"},"components":[{"type":"row","draggable":["thead","tbody","tfoot"],"droppable":["th","td"],"classes":["bg-white"],"attributes":{"id":"profile-table-table-row"},"components":[{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-name"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-username"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-walletaress"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-email"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-phone"]},{"type":"cell","draggable":["tr"],"classes":["hidden","px-2","py-5","text-[14px]","font-medium","text-left","profile-table-table-col-joined_date"]}]}]}]}]},{"classes":["flex","gap-x-10","items-center"],"components":[{"type":"text","classes":["text-[16px]","font-bold","mt-4","bg-[#252525]","text-white","text-center","w-[24px]","h-[24px]"],"attributes":{"id":"irgjbt"},"components":[{"type":"textnode","content":"\n              1\n            "}]}]}]}]}]},{"type":"comment","content":" QR SCAN LIB "},{"type":"comment","content":"<script src=\"https://cdn.jsdelivr.net/npm/web3@4.8.0/dist/web3.min.js\"></script> "}],"head":{"type":"head"},"docEl":{"tagName":"html"},"contract":"---","metadata":"","api":"---"},"id":"I4Wdx7peUSuwzsmJ"}],"id":"dHL3tsP6tJmJ2Mcqawy"}],"symbols":[],"dataSources":[]}}